version: '3.9'

services:
  calendar:
    build:
      context: ./..
      dockerfile: ./build/Dockerfile
      args:
        BIN_FILE: "/opt/calendar/calendar-app"
        APP_FOLDER: "calendar"
        CONFIG_FILE_EXTERNAL: "./configs/calendar_config.toml"
    restart: unless-stopped
    container_name: calendar
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${GRPS_PORT}:${GRPS_PORT}
    depends_on:
      - db

  calendar_scheduler:
    build:
      context: ./..
      dockerfile: ./build/Dockerfile
      args:
        BIN_FILE: "/opt/calendar/scheduler-app"
        APP_FOLDER: "calendar_scheduler"
        CONFIG_FILE_EXTERNAL: "./configs/scheduler_config.toml"
    restart: unless-stopped
    depends_on:
      - db
      - broker
#
#  calendar_sender:
#    build:
#      context: ./..
#      dockerfile: ./build/Dockerfile
#      args:
#        BIN_FILE: "/opt/calendar/sender-app"
#        APP_FOLDER: "calendar_sender"
#        CONFIG_FILE_EXTERNAL: "./configs/sender_config.toml"
#    restart: unless-stopped
#    depends_on:
#      - db
#      - broker

  db:
    image: postgres:${DB_VERSION}
    container_name: db
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d calendar" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./migrations/schema:/docker-entrypoint-initdb.d

  broker:
    image: rabbitmq:3.11.1-management-alpine
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - broker:/var/lib/rabbitmq/
      - broker:/var/log/rabbitmq
    ports:
      - ${BROKER_ADMIN_PORT}:15672
      - ${BROKER_PORT}:5672

volumes:
  broker:
